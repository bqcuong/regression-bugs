
MiLib 1.5 ( 8 Sep 2016)
========================



MiLib 1.4 (20 Jun 2016)
========================

-- A bunch of classes migrated from MITools to MiLib
-- Classes for CLI abstraction moved from MiTools
-- Version of Jackson updated to 2.7.4
-- Minor fixes CLI
-- Correct offset values in PairedReadMergingResult
-- *(Alpha)* Mutations aggregator


MiLib 1.3 ( 1 Feb 2016)
========================

-- Major refactoring of wildcards
-- Reverse-complement for sequences with wildcards
-- Motif matching in sequences with wildcards
-- Bitap search in sequences with wildcards
-- Rename of `mismatchAndIndelMatcherFirst()` -> `substitutionAndIndelMatcherFirst()`


MiLib 1.2 (29 Dec 2015)
========================

-- KAligner2: new aligner for amplicon-like sequencing data processing (alignments with long gaps, 
   performance ~20-100us per query).
-- Common API for batch aligners.
-- Full set of banded aligners with affine gap
-- Nuc. Mutations -> AA. Mutations utility method
-- `removeMutationsInRanges` method for Mutations class
-- minor: Output jar file now contain version inforamtion accessible using 
   `VersionInfo.getVersionInfo(...)`
-- minor: FastqRecordsReader made public
-- minor: Access to RawFastaRecord


MiLib 1.1.2 ( 6 Oct 2015)
========================

-- Compatibility writer for Enums in PrimitivI


MiLib 1.1.1 (11 Sep 2015)
========================

-- exception in fastq files with `.` symbol in sequence fixed, `.` symbol in fastq files converts 
   to 'N'
-- verbose error message if fastq file parsing failed
-- added `MultiAlignmentHelper` for pretty output of several alignments with common sequence (like 
   V, D, J alignments in VDJ assembly)
-- `charFromCodeAt` renamed to `symbolAt` in base Sequence class
-- BLAST aligner now supports management of several concurrent BLAST instances (to align queries 
   from a common pipe)


MiLib 1.1 (21 Aug 2015)
========================

-- Substantial modification for basic Sequence abstraction
-- Wildcars are incorporated into normal alphabets
-- IncompleteSequences are removed
-- `FastaReader` isolated into sepparate entity (now it can read AminoAcid sequences) and special 
   wrapper is created (`FastaSequenceReaderWrapper`) to wire it back to SequenceReader abstraction
-- `BatchAligner` abstraction
-- `SimpleBatchAligner`
-- Extancive binding to Blast implemeting BatchAligner abstraction for interoperability with other 
   BatchAligners
-- many other small modifications to support new abstraction


MiLib 1.0.2 (12 Aug 2015)
========================

-- New automated release mechanism
-- More named presets for TreeSearchParameters (`two`/`three`/`four` x 
   smatches`/`indels`/`mismatchesOrIndels`)


MiLib v1.0.1 (16 Jun 2015)
========================

-- Added StringSerializer to PrimitivIO
-- Fixed annoying time format in SmartProgressReporter
-- Converter from BTOP to Mutations



MiLib v1.0 (23 Jan 2015)
========================

-- Initial release